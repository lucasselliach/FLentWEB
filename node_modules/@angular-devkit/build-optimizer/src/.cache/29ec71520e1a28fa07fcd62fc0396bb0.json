{"remainingRequest":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\date-fns\\add_milliseconds\\index.js","dependencies":[{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\date-fns\\add_milliseconds\\index.js","mtime":1544450745000},{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n",null]}