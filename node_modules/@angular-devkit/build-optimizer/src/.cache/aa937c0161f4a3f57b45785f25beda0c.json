{"remainingRequest":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\rxjs\\internal\\util\\subscribeTo.js","dependencies":[{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\rxjs\\internal\\util\\subscribeTo.js","mtime":499162500000},{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Dev\\SgwProjectxs\\SGWProjectxHotelFrontx\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\"use strict\";\n/*@__PURE__*/ Object.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = /*@__PURE__*/ require(\"../Observable\");\nvar subscribeToArray_1 = /*@__PURE__*/ require(\"./subscribeToArray\");\nvar subscribeToPromise_1 = /*@__PURE__*/ require(\"./subscribeToPromise\");\nvar subscribeToIterable_1 = /*@__PURE__*/ require(\"./subscribeToIterable\");\nvar subscribeToObservable_1 = /*@__PURE__*/ require(\"./subscribeToObservable\");\nvar isArrayLike_1 = /*@__PURE__*/ require(\"./isArrayLike\");\nvar isPromise_1 = /*@__PURE__*/ require(\"./isPromise\");\nvar isObject_1 = /*@__PURE__*/ require(\"./isObject\");\nvar iterator_1 = /*@__PURE__*/ require(\"../symbol/iterator\");\nvar observable_1 = /*@__PURE__*/ require(\"../symbol/observable\");\nexports.subscribeTo = function (result) {\n    if (result instanceof Observable_1.Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        return subscribeToObservable_1.subscribeToObservable(result);\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        return subscribeToArray_1.subscribeToArray(result);\n    }\n    else if (isPromise_1.isPromise(result)) {\n        return subscribeToPromise_1.subscribeToPromise(result);\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        return subscribeToIterable_1.subscribeToIterable(result);\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n",null]}