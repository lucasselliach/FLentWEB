{"version":3,"sources":["null","ng://angular-resizable-element/resizable.directive.ts","ng://angular-resizable-element/resize-handle.directive.ts","ng://angular-resizable-element/resizable.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","isNumberCloseTo","value1","value2","precision","Math","abs","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","isWithinBoundingY","_a","rect","isWithinBoundingX","getResizeEdges","elm","allowedEdges","cursorPrecision","elmPosition","nativeElement","getBoundingClientRect","DEFAULT_RESIZE_CURSORS","Object","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","forEach","edge","RESIZE_ACTIVE_CLASS","ResizableDirective","renderer","zone","this","EventEmitter","Subject","pointerEventListeners","PointerEventListeners","getInstance","prototype","ngOnInit","currentResize","_this","pointerDown","pipe","takeUntil","destroy$","subscribe","mousedown","pointerMove","event","mousemove","pointerUp","mouseup","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","mouseMove","share","filter","preventDefault","auditTime","resizeEdges","resizeCursorPrecision","resizeCursors","assign","cursor","document","body","setElementClass","mergeMap","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","resizeSnapGrid","getGrid","coords","ceil","merge","take","map","pairwise","_b","previousCoords","newCoords","previousGrid","newGrid","round","allowNegativeResizes","validateResize","rectangle","run","resizing","emit","currentRect","length","getElementRect","element","ghostElementPositioning","translateX","translateY","style","transform","property","find","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","scrollTop","scrollLeft","enableGhostResize","cloneNode","appendChild","addClass","resizeStart","removeClass","resizeEnd","ngOnDestroy","complete","name","add","Directive","args","selector","Renderer2","ElementRef","NgZone","Input","Output","Observable","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","instance","ResizeHandleDirective","resizable","unsubscribeEventListeners","onMousedown","eventListeners","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","onMouseup","type","HostListener","ResizableModule","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject, Observable, Observer, merge, Subscription } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  filter,\n  pairwise,\n  take,\n  share,\n  auditTime\n} from 'rxjs/operators';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff < precision;\n}\n\nfunction getNewBoundingRectangle(\n  startingRect: BoundingRectangle,\n  edges: Edges,\n  clientX: number,\n  clientY: number\n): BoundingRectangle {\n  const newBoundingRect: BoundingRectangle = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n\n  return newBoundingRect;\n}\n\nfunction getElementRect(\n  element: ElementRef,\n  ghostElementPositioning: string\n): BoundingRectangle {\n  let translateX = 0;\n  let translateY = 0;\n  const style = element.nativeElement.style;\n  const transformProperties = [\n    'transform',\n    '-ms-transform',\n    '-moz-transform',\n    '-o-transform'\n  ];\n  const transform = transformProperties\n    .map(property => style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n\nfunction isWithinBoundingX({\n  clientX,\n  rect\n}: {\n  clientX: number;\n  rect: ClientRect;\n}): boolean {\n  return clientX >= rect.left && clientX <= rect.right;\n}\n\nfunction getResizeEdges({\n  clientX,\n  clientY,\n  elm,\n  allowedEdges,\n  cursorPrecision\n}: {\n  clientX: number;\n  clientY: number;\n  elm: ElementRef;\n  allowedEdges: Edges;\n  cursorPrecision: number;\n}): Edges {\n  const elmPosition: ClientRect = elm.nativeElement.getBoundingClientRect();\n  const edges: Edges = {};\n\n  if (\n    allowedEdges.left &&\n    isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.left = true;\n  }\n\n  if (\n    allowedEdges.right &&\n    isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.right = true;\n  }\n\n  if (\n    allowedEdges.top &&\n    isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.top = true;\n  }\n\n  if (\n    allowedEdges.bottom &&\n    isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n\nexport interface ResizeCursors {\n  topLeft: string;\n  topRight: string;\n  bottomLeft: string;\n  bottomRight: string;\n  leftOrRight: string;\n  topOrBottom: string;\n}\n\nconst DEFAULT_RESIZE_CURSORS: ResizeCursors = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\n\nfunction getResizeCursor(edges: Edges, cursors: ResizeCursors): string {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}: {\n  edges: Edges;\n  initialRectangle: BoundingRectangle;\n  newRectangle: BoundingRectangle;\n}): Edges {\n  const edgesDiff: Edges = {};\n  Object.keys(edges).forEach(edge => {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input()\n  validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input()\n  resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input()\n  enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input()\n  resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input()\n  resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input()\n  resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input()\n  ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Allow elements to be resized to negative dimensions\n   */\n  @Input()\n  allowNegativeResizes: boolean = false;\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output()\n  resizeStart = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output()\n  resizing = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output()\n  resizeEnd = new EventEmitter<ResizeEvent>();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n    event: MouseEvent | TouchEvent;\n  }>();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private destroy$ = new Subject();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListeners.pointerDown\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      });\n\n    this.pointerEventListeners.pointerMove\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      });\n\n    this.pointerEventListeners.pointerUp\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      });\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable<any> = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(auditTime(MOUSE_MOVE_THROTTLE_MS))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable<any> = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return (\n            this.allowNegativeResizes ||\n            !!(\n              newBoundingRect.height &&\n              newBoundingRect.width &&\n              newBoundingRect.height > 0 &&\n              newBoundingRect.width > 0\n            )\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.destroy$.next();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable<PointerEventCoordinate>;\n\n  public pointerMove: Observable<PointerEventCoordinate>;\n\n  public pointerUp: Observable<PointerEventCoordinate>;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n","import {\n  Directive,\n  Input,\n  HostListener,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizeHandle]'\n})\nexport class ResizeHandleDirective implements OnDestroy {\n  /**\n   * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n   */\n  @Input()\n  resizeEdges: Edges = {};\n\n  private eventListeners: {\n    touchmove?: () => void;\n    mousemove?: () => void;\n    [key: string]: (() => void) | undefined;\n  } = {};\n\n  constructor(\n    private renderer: Renderer2,\n    private element: ElementRef,\n    private zone: NgZone,\n    private resizable: ResizableDirective\n  ) {}\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY'\n  ])\n  @HostListener('mousedown', ['$event', '$event.clientX', '$event.clientY'])\n  onMousedown(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    event.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(\n          this.element.nativeElement,\n          'touchmove',\n          (touchMoveEvent: TouchEvent) => {\n            this.onMousemove(\n              touchMoveEvent,\n              touchMoveEvent.targetTouches[0].clientX,\n              touchMoveEvent.targetTouches[0].clientY\n            );\n          }\n        );\n      }\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(\n          this.element.nativeElement,\n          'mousemove',\n          (mouseMoveEvent: MouseEvent) => {\n            this.onMousemove(\n              mouseMoveEvent,\n              mouseMoveEvent.clientX,\n              mouseMoveEvent.clientY\n            );\n          }\n        );\n      }\n      this.resizable.mousedown.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchend', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('touchcancel', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('mouseup', ['$event.clientX', '$event.clientY'])\n  onMouseup(clientX: number, clientY: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  private onMousemove(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListeners).forEach(type => {\n      (this as any).eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { ResizeHandleDirective } from './resize-handle.directive';\n\n@NgModule({\n  declarations: [ResizableDirective, ResizeHandleDirective],\n  exports: [ResizableDirective, ResizeHandleDirective]\n})\nexport class ResizableModule {}\n"]}